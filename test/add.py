import tensorflow as tf

a=tf.constant([1]) +2
b=tf.constant([2])

c=tf.add(a,b)
with tf.Session() as sess:
    print(sess.run(c))
'''有些东西不好描述，我直接贴测试出来的一些样例，大概可以理解add到底是怎么使用的
eg: a : [[1,2],[4,2]]
    b : [2,3]
    c:[[3 5]
     [6 5]] 这个地方输出的时候自动跳行，不是特别理解。但是可以看出其实是依次相加
    当上下两个括号中的数不一样的时候，会直接报错，过不了编译，比如如果把上面的b改成[2,3,4]那么就直接炸
    
    a : [[1,2],[4,2],[4,5]]
    b : [[2,4],[1,0],[0,1]]
    c :[[3 6]
    [5 2]
    [4 6]]
    这样是可以计算的，很明显是相对应的一次相加，但是如果上面缺少一个。比如把b变成[[2,4],[1,0]]那么就会报错
    
    a : [[1,2],[4,2],[4,5]]
    b : [2]
    c :[[3 4]
    [6 4]
     [6 7]]
     b中的[2]改为[[2]]答案一样，改成[[[2]]]，答案中就会多处一个中括号，但是一样可以
     
     
 按照官方的解释，是第二种情况 是标准情况，如果不是的话，那么会朝着第二种情况（会朝着维度较大的变量， 进行广播，使得二者能够逐元素相加）
 
 还句话说的话，第一种应该是这样
    a : [[1,2],[4,2]]——  [[1,2],[4,2]]
    b : [2,3]  —————— [[2,3],[2,3]]然后再加
    
   第三种情况是这样
   a : [[1,2],[4,2],[4,5]]——[[1,2],[4,2],[4,5]]
   b : [2]——————————— [[2,2],[2,2],[2,2]]
   最后加起来得到答案
   
   
    
    
    
